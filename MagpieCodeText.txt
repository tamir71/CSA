/**
 * @author Tamir Enkhjargal
 * @version October 2016
 */

/**
 *Begin Magpie
 */

public class Magpie4
{
    /**
     * Greeting when you start Magpie
     */ 
    public String getGreeting()
    {
        return "Hello, let's talk.";
    }
    
    /**
     * All non-special responses here
     * Includes special keywords such as [mother, father, cat, dog, Mr. Mrs. Ms., etc]
     */
    public String getResponse(String statement)
    {
        /**
         * Special transformation responses
         * Added [I want] that works AFTER [I want to], as well as implementing [I] something [you]
         */
        String response = "";
        if (findKeyword(statement, "I want to", 0) >= 0)
        {
            response = transformIWantToStatement(statement);
        }
        
        else if (findKeyword(statement, "I want", 0) >= 0)
        {
            response = transformIWantStatement(statement);
        }
        else if (findKeyword(statement, "Do you like", 0) >= 0)
        {
            response = transformDoYouLikeStatement(statement);
        }
        
        int psn = findKeyword(statement, "I", 0);
        if (psn >= 0 && findKeyword(statement, "you", psn) >= 0)
        {
            response = transformIYouStatement(statement);
        }

        else
        {
            
            if (psn >= 0
                    && findKeyword(statement, "me", psn) >= 0)
            {
                response = transformYouMeStatement(statement);
            }
            else
            {
                response = getRandomResponse();
            }
        }
        if (statement.length() == 0)
        {
            response = "Say something, please.";
        }

        else if (findKeyword(statement, "no") >= 0
                || findKeyword(statement, "hate") >= 0
                || findKeyword(statement, "bad") >= 0)
        {
            response = "Why so negative?";
        }
        else if (findKeyword(statement, "mother") >= 0
                || findKeyword(statement, "father") >= 0
                || findKeyword(statement, "sister") >= 0
                || findKeyword(statement, "brother") >= 0)
        {
            response = "Tell me more about your family.";
        }
        else if (findKeyword(statement, "sister") >= 0)
        {
            response = "Sisters are always like that.";
        }
        else if (findKeyword(statement, "cat") >= 0
                || findKeyword(statement, "dog") >= 0)
        {
            response = "Tell me more about your pets.";
        }
        else if (findKeyword(statement, "Mr.") >= 0)
        {
            response = "He sounds like a good teacher.";
        }
        
        else if (findKeyword(statement, "Mrs.") >= 0
                || findKeyword(statement, "Ms.") >= 0)
        {
            response = "She sounds like a good teacher.";
        }
        else if (findKeyword(statement, "all") >= 0
                || findKeyword(statement, "everyone") >= 0)
        {
            response = "In what ways?";
        }
        else if (findKeyword(statement, "depressed") >= 0
                || findKeyword(statement, "sad") >= 0
                || findKeyword(statement, "unhappy") >= 0
                || findKeyword(statement, "hurt") >= 0)
        {
            response = "I'm sorry to hear that the situation is sad. :(";
        }
        else if (findKeyword(statement, "happy") >= 0
                || findKeyword(statement, "cheerful") >= 0
                || findKeyword(statement, "delighted") >= 0
                || findKeyword(statement, "peaceful") >= 0
                || findKeyword(statement, "pleased") >= 0
                || findKeyword(statement, "joy") >= 0
                || findKeyword(statement, "glad") >= 0)
        {
            response = "Are you happy because of it?";
        }
        else if (findKeyword(statement, "help") >= 0
                || findKeyword(statement, "advice") >= 0
                || findKeyword(statement, "service") >= 0
                || findKeyword(statement, "comfort") >= 0
                || findKeyword(statement, "support") >= 0)
        {
            response = "Who do you need to help?";
            
            if (findKeyword(statement, "friend") >= 0
                || findKeyword(statement, "mother") >= 0
                || findKeyword(statement, "brother") >= 0
                || findKeyword(statement, "father") >= 0
                || findKeyword(statement, "sister") >= 0
                || findKeyword(statement, "family") >= 0)
                {
                    response = "It seems that they need some help, can you help them?";
                    
                    if (findKeyword(statement, "yes") >= 0)
                        {
                            response = "You seem like a good person :)";
                        }
                    else if (findKeyword(statement, "no") >= 0)
                        {
                            response = "Why not? They need help.";
                        }
                    else if (findKeyword(statement, "maybe") >= 0
                        || findKeyword(statement, "perhaps") >= 0
                        || findKeyword(statement, "possible") >= 0
                        || findKeyword(statement, "somewhat") >= 0)
                        {
                            response = "You seem uncertain, it should be better to help.";
                        }
                }
            else if (findKeyword(statement, "me") >= 0)
                {
                    response = "Do you need help?";
                    
                    if (findKeyword(statement, "yes") >= 0)
                        {
                            response = "If you need any help, check out help centers.";
                        }
                    else if (findKeyword(statement, "suicide") >= 0
                        || findKeyword(statement, "kill") >= 0
                        || findKeyword(statement, "hurt") >= 0)
                        {
                            response = "Hurting yourself is never the way out, you should talk to a friendly face or to the suicide center.";
                        }
                    else if (findKeyword(statement, "no") >= 0)
                        {
                            response = "Ok then, if you're sure.";
                        }
                }
            else if (findKeyword(statement, "bully") >= 0)
                {
                    response = "Stand up for yourself you baby! Just kidding, seriously talk to an adult.";
                }
            else if (findKeyword(statement, "no one") >= 0)
                {
                    response = "I think you're hiding something from me.";
                }
            }
        else if (findKeyword(statement, "of course") >= 0
                || findKeyword(statement, "certain") >= 0
                || findKeyword(statement, "positive") >= 0
                || findKeyword(statement, "convinced") >= 0
                || findKeyword(statement, "sure") >= 0)
        {
            response = "You seem certain, are you going for it?";
        }
        else if (findKeyword(statement, "rediculous") >= 0
                || findKeyword(statement, "crazy") >= 0
                || findKeyword(statement, "stupid") >= 0
                || findKeyword(statement, "cheerful") >= 0)
        {
            response = "In what ways?";
        }
        else if (findKeyword(statement, "analzye") >= 0
                || findKeyword(statement, "calculate") >= 0
                || findKeyword(statement, "classify") >= 0
                || findKeyword(statement, "compare") >= 0
                || findKeyword(statement, "construct") >= 0
                || findKeyword(statement, "contrast") >= 0
                || findKeyword(statement, "convert") >= 0
                || findKeyword(statement, "critique") >= 0
                || findKeyword(statement, "define") >= 0
                || findKeyword(statement, "demonstrate") >= 0
                || findKeyword(statement, "describe") >= 0
                || findKeyword(statement, "determine") >= 0
                || findKeyword(statement, "discuss") >= 0
                || findKeyword(statement, "distinguish") >= 0
                || findKeyword(statement, "estimate") >= 0
                || findKeyword(statement, "evaluate") >= 0
                || findKeyword(statement, "explain") >= 0
                || findKeyword(statement, "forecast") >= 0
                || findKeyword(statement, "formulate") >= 0
                || findKeyword(statement, "identify") >= 0
                || findKeyword(statement, "interpret") >= 0
                || findKeyword(statement, "judge") >= 0
                || findKeyword(statement, "justify") >= 0
                || findKeyword(statement, "prepare") >= 0
                || findKeyword(statement, "recommend") >= 0
                || findKeyword(statement, "select") >= 0
                || findKeyword(statement, "show") >= 0
                || findKeyword(statement, "solve") >= 0
                || findKeyword(statement, "state") >= 0
                || findKeyword(statement, "support") >= 0)
        {
            response = "C'mon, do I really have to?";
        }
        
    
        else if (findKeyword(statement, "angry") >= 0
                || findKeyword(statement, "annoyed") >= 0
                || findKeyword(statement, "mad") >= 0
                || findKeyword(statement, "furious") >= 0
                || findKeyword(statement, "irritated") >= 0
                || findKeyword(statement, "frustrated") >= 0
                || findKeyword(statement, "bitter") >= 0
                || findKeyword(statement, "raged") >= 0
                || findKeyword(statement, "offended") >= 0)
        {
            response = "Do you need some space? I'm here to help";
            
            if (findKeyword(statement, "yes") >= 0
                || findKeyword(statement, "sure") >= 0
                || findKeyword(statement, "ok") >= 0)
            {
                response = "Okay, I'll leave you alone for now, but come back if you need a friend :)";
            }
            else if (findKeyword(statement, "no") >= 0
                || findKeyword(statement, "nah") >= 0
                || findKeyword(statement, "don't") >= 0)
            {
                response = "Don't worry 'bout a thing, 'cause every little thing gonna be all right... - Bob Marley";
            }
        }
        
        return response;
        
    }
    
    /**
     * This is where the transformations work
     * [I want to], [I want], [I something you], and [you transforms to me]
     */
    private String transformIWantToStatement(String statement)
    {
        //  Remove the final period, if there is one
        statement = statement.trim();
        String lastChar = statement.substring(statement
                .length() - 1);
        if (lastChar.equals("."))
        {
            statement = statement.substring(0, statement
                    .length() - 1);
        }
        int psn = findKeyword (statement, "I want to", 0);
        String restOfStatement = statement.substring(psn + 9).trim();
        return "What would it mean to " + restOfStatement + "?";
    }

    private String transformIWantStatement(String statement)
    {
        statement = statement.trim();
        String lastChar = statement.substring(statement
                .length() - 1);
        if (lastChar.equals("."))
        {
            statement = statement.substring(0, statement
                    .length() - 1);
        }
        int psn = findKeyword (statement, "I want", 0);
        String restOfStatement = statement.substring(psn + 6).trim();
        return "Would you really be happy if you had " + restOfStatement + "?";
    }
    
    private String transformDoYouLikeStatement(String statement)
    {
        statement = statement.trim();
        String lastChar = statement.substring(statement.length() - 1);
        if (lastChar.equals("."))
        {
            statement = statement.substring(0, statement.length() - 1);
        }
        int psn = findKeyword (statement, "Do you like", 0);
        String restOfStatement = statement.substring(psn + 10).trim();
        final int NUMBER_OF_LIKE_RESPONSES = 3;
            double r = Math.random();
            int whichLikeResponse = (int)(r * NUMBER_OF_LIKE_RESPONSES);
        
        if (whichLikeResponse == 0)
        {
            return "Depends, is today Tuesday?";
        }
        else if (whichLikeResponse == 1)
        {
            return "Yes, I adore " + restOfStatement + ".";
        }
        else if (whichLikeResponse == 2)
        {
            return "No, I dont like " + restOfStatement + ".";
        }
        else if (whichLikeResponse == 3)
        {
            return "Maybe, do you like it?";
        }
        else
        {
            return  "Who knows, oh wait that's me.";
        }
    }
    
    private String transformIYouStatement(String statement)
    {
            statement = statement.trim();
            String lastChar = statement.substring(statement.length() - 1);
            if (lastChar.equals("."))
            {
                statement = statement.substring(0, statement.length() - 1);
            }
            
            int psnOfI = findKeyword (statement, "I", 0);
            int psnOfYou = findKeyword (statement, "you", psnOfI + 1);
            
            String restOfStatement = statement.substring(psnOfI + 1, psnOfYou).trim();
            return "Why do you " + restOfStatement + " me?";
        }
    
    /**
     * Transform you to me
     */
    private String transformYouMeStatement(String statement)
    {
        //  Remove the final period, if there is one
        statement = statement.trim();
        String lastChar = statement.substring(statement
                .length() - 1);
        if (lastChar.equals("."))
        {
            statement = statement.substring(0, statement
                    .length() - 1);
        }
        
        int psnOfYou = findKeyword (statement, "you", 0);
        int psnOfMe = findKeyword (statement, "me", psnOfYou + 3);
        
        String restOfStatement = statement.substring(psnOfYou + 3, psnOfMe).trim();
        return "What makes you think that I " + restOfStatement + " you?";
    }
    
    /**
     * Trimming, seeing if there is a beginning or an ending to the keyword 
     */
    private int findKeyword(String statement, String goal, int startPos)
    {
        String phrase = statement.trim();
        //  The only change to incorporate the startPos is in the line below
        int psn = phrase.toLowerCase().indexOf(goal.toLowerCase(), startPos);
        
        //  Refinement--make sure the goal isn't part of a word 
        while (psn >= 0) 
        {
            //  Find the string of length 1 before and after the word
            String before = " ", after = " "; 
            if (psn > 0)
            {
                before = phrase.substring (psn - 1, psn).toLowerCase();
            }
            if (psn + goal.length() < phrase.length())
            {
                after = phrase.substring(psn + goal.length(), psn + goal.length() + 1).toLowerCase();
            }
            
            //  If before and after aren't letters, we've found the word
            if (((before.compareTo ("a") < 0 ) || (before.compareTo("z") > 0))  //  before is not a letter
                    && ((after.compareTo ("a") < 0 ) || (after.compareTo("z") > 0)))
            {
                return psn;
            }
            
            //  The last position didn't work, so let's find the next, if there is one.
            psn = phrase.indexOf(goal.toLowerCase(), psn + 1);
            
        }
        
        return -1;
    }

    private int findKeyword(String statement, String goal)
    {
        return findKeyword (statement, goal, 0);
    }
    
    /**
     * Random Response for when keyword doesn't pick up anything
     */
    private String getRandomResponse()
    {
        final int NUMBER_OF_RESPONSES = 7;
        double r = Math.random();
        int whichResponse = (int)(r * NUMBER_OF_RESPONSES);
        String response = "";
        
        if (whichResponse == 0)
        {
            response = "Interesting, tell me more.";
        }
        else if (whichResponse == 1)
        {
            response = "Hmmm.";
        }
        else if (whichResponse == 2)
        {
            response = "Do you really think so?";
        }
        else if (whichResponse == 3)
        {
            response = "You don't say.";
        }
        else if (whichResponse == 4)
        {
            response = "Idk.";
        }
        else if (whichResponse == 5)
        {
            response = "Ask Mr. Wilson.";
        }
        else if (whichResponse == 6)
        {
            response = "Maybe, but check it again.";
        }
        else if (whichResponse == 7)
        {
            response = "No you.";
        }
        return response;
    }

}
